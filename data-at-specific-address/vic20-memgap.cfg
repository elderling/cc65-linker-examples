FEATURES {
    STARTADDRESS: default = $1201;
}
SYMBOLS {
     __LOADADDR__:  type = import;
     __EXEHDR__:    type = import;
     __STACKSIZE__: type = weak, value = $0100; # 256 byte stack
		 __HIMEM__: 		type = weak, value = $4000;
		 #__SYSADDRESS__:type = weak, value = $120d;
		 __SYSADDRESS__:type = weak, value = $2000;
}

MEMORY {
     ZP:       file = "", define = yes, start = $0002, size = $001a;
     LOADADDR: file = %O,               start = %S - $0002, size = $0002;
     HEADER:   file = %O,               start = %S, size = __SYSADDRESS__ - %S, fill = yes;
     #SCREEN:   file = %O, define = yes, start = $120d, size = __SYSADDRESS__ - $120d, fill = yes;
     #MAIN:     file = %O, define = yes, start = __SYSADDRESS__, size = __HIMEM__ - $120d - __STACKSIZE__;
     MAIN:     file = %O, define = yes, start = __SYSADDRESS__, size = __HIMEM__ - __SYSADDRESS__ - __STACKSIZE__;
}

SEGMENTS {
     ZEROPAGE: load = ZP,       type = zp;
     LOADADDR: load = LOADADDR, type = ro;
     EXEHDR:   load = HEADER,   type = ro;
     #SCR:      load = SCREEN,   type = ro, define = yes, fillval = 0;
     STARTUP:  load = HEADER,     type = ro;
     LOWCODE:  load = MAIN,     type = ro,  optional = yes;
     CODE:     load = MAIN,     type = ro;
     RODATA:   load = MAIN,     type = ro;
     DATA:     load = MAIN,     type = rw;
     ONCE:     load = MAIN,     type = ro,  optional = yes;
     INIT:     load = MAIN,     type = bss;
     BSS:      load = MAIN,     type = bss, define   = yes;
}

FEATURES {
     CONDES: type    = constructor,
             label   = __CONSTRUCTOR_TABLE__,
             count   = __CONSTRUCTOR_COUNT__,
             segment = ONCE;
     CONDES: type    = destructor,
             label   = __DESTRUCTOR_TABLE__,
             count   = __DESTRUCTOR_COUNT__,
             segment = RODATA;
     CONDES: type    = interruptor,
             label   = __INTERRUPTOR_TABLE__,
             count   = __INTERRUPTOR_COUNT__,
             segment = RODATA,
             import  = __CALLIRQ__;
}
